//Есть словарь с видами чая и их стоимостью. Есть очередь людей, которые хотят заказать чай (можно представить её в виде массива видов чая, которые хотят заказать).
//Необходимо последовательно выводить в консоль сколько заплатит покупатель (необходимо вывести его номер по порядку, чай, который он заказал, и стоимость).

enum Tea: String {
    case black = "Black"
    case green = "Green"
    case fruit = "Fruit"
}

let price: [Tea: Double] = [.black: 50, .green: 70, .fruit: 90]
let queue: [Tea] = [.green, .black, .black, .fruit, .black]

for (index, order) in queue.enumerated() {
    print("Buyer №\(index + 1): Drink - \(order.rawValue) tea, price - \(price[order]!)")
}


//Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]. Необходимо создать новый массив, который будет состоять из элементов старого, но не должно быть nil, не должно быть 0 и 4, а также массив должен быть отсортирован по возрастанию.

let arr: [Int?] = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]
let arr2 = arr.compactMap {$0}.filter {$0 != 0 && $0 != 4}.sorted()

print(arr2)


//Написать функцию, которая на вход принимает целое число, а возвращает массив, который сформирован по следующим правилам: количество элементов соответствует переданному числу, массив начинается с 1, каждый последующий элемент больше предыдущего в 2 раза.

func genArray (num: Int) -> [Int] {
    var arr: [Int] = []

    for i in 1...num {
        if i == 1 {
            arr.append(1)
        } else {
            arr.append(arr[i-2] * 2)
        }
    }
    return arr
}

print(genArray(num: 5))
